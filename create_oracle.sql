-- DROP USER TennisBooking CASCADE;
-- CREATE USER TennisBooking IDENTIFIED BY TennisBooking;
-- ALTER SESSION SET CURRENT_SCHEMA = TennisBooking;

CREATE TABLE Customer (
	Id NUMBER(10) NOT NULL,
	UUID VARCHAR(255) NOT NULL,
	Email VARCHAR2(255) NOT NULL,
	Password VARCHAR(255) NOT NULL,
	VerificationCode VARCHAR(255) NOT NULL,
	Verified NUMBER(3) NOT NULL,
	ResetCode VARCHAR(255) NOT NULL,
	FirstName VARCHAR(255) NOT NULL,
	LastName VARCHAR(255) NOT NULL,
	Gender NUMBER(10) NOT NULL,
	Welcomed NUMBER(10) NOT NULL,
	PRIMARY KEY (Id),
	UNIQUE (Email)
);

CREATE SEQUENCE Customer_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Customer_seq_tr
 BEFORE INSERT ON Customer FOR EACH ROW
 WHEN (NEW.Id IS NULL)
BEGIN
 SELECT Customer_seq.NEXTVAL INTO :NEW.Id FROM DUAL;
END;

CREATE TABLE Club (
	Id NUMBER(10) NOT NULL,
	Link VARCHAR2(255) NOT NULL,
	AdminId NUMBER(10),
	IBAN VARCHAR(255) NOT NULL,
	PaidTill DATE,
	FreeTrialTill DATE NOT NULL,
	Name VARCHAR(255) NOT NULL,
	Info VARCHAR(255) NULL,
	Address VARCHAR(255) NULL,
	ZipCode NUMBER(10) NULL,
	ImagePath VARCHAR(255) NOT NULL,
	FOREIGN KEY (AdminId) REFERENCES Customer (Id),
	PRIMARY KEY (Id),
	UNIQUE (Link)
);

CREATE SEQUENCE Club_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Club_seq_tr
 BEFORE INSERT ON Club FOR EACH ROW
 WHEN (NEW.Id IS NULL)
BEGIN
 SELECT Club_seq.NEXTVAL INTO :NEW.Id FROM DUAL;
END;

CREATE TABLE ClubEvent (
	Id NUMBER(10) NOT NULL,
	Title VARCHAR(255) NOT NULL,
	Info VARCHAR(255) NOT NULL,
	ClubNavigationId NUMBER(10) NOT NULL,
	FOREIGN KEY (ClubNavigationId) REFERENCES Club (Id) ON DELETE CASCADE,
	PRIMARY KEY (Id)
);

CREATE SEQUENCE ClubEvent_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ClubEvent_seq_tr
 BEFORE INSERT ON ClubEvent FOR EACH ROW
 WHEN (NEW.Id IS NULL)
BEGIN
 SELECT ClubEvent_seq.NEXTVAL INTO :NEW.Id FROM DUAL;
END;

CREATE TABLE ClubNews (
	Id NUMBER(10) NOT NULL,
	Title VARCHAR(255) NOT NULL,
	Info VARCHAR(255) NOT NULL,
	ClubNavigationId NUMBER(10) NOT NULL,
	FOREIGN KEY (ClubNavigationId) REFERENCES Club (Id) ON DELETE CASCADE,
	PRIMARY KEY (Id)
);

CREATE SEQUENCE ClubNews_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ClubNews_seq_tr
 BEFORE INSERT ON ClubNews FOR EACH ROW
 WHEN (NEW.Id IS NULL)
BEGIN
 SELECT ClubNews_seq.NEXTVAL INTO :NEW.Id FROM DUAL;
END;

CREATE TABLE CourtType (
	Id NUMBER(10) NOT NULL PRIMARY KEY,
    Name VARCHAR(255) NOT NULL
);

CREATE SEQUENCE CourtType_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER CourtType_seq_tr
 BEFORE INSERT ON CourtType FOR EACH ROW
 WHEN (NEW.Id IS NULL)
BEGIN
 SELECT CourtType_seq.NEXTVAL INTO :NEW.Id FROM DUAL;
END;

CREATE TABLE Court (
   Id NUMBER(10) NOT NULL PRIMARY KEY,
   Name VARCHAR(255) NOT NULL,
   Bookable NUMBER(3) NOT NULL,
   Type NUMBER(10) NOT NULL,
   APrice BINARY_DOUBLE NOT NULL,
   BPrice BINARY_DOUBLE NULL,
   ATimeFrom NUMBER(10) NOT NULL,
   ATimeTill NUMBER(10) NOT NULL,
   AWeekendTimeTill NUMBER(10) NOT NULL,
   ClubNavigationId NUMBER(10) NOT NULL,
   FOREIGN KEY (Type) REFERENCES CourtType (Id) ON DELETE CASCADE,
   FOREIGN KEY (ClubNavigationId) REFERENCES Club (Id) ON DELETE CASCADE
);

CREATE SEQUENCE Court_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER Court_seq_tr
 BEFORE INSERT ON Court FOR EACH ROW
 WHEN (NEW.Id IS NULL)
BEGIN
 SELECT Court_seq.NEXTVAL INTO :NEW.Id FROM DUAL;
END;

COMMIT;