START TRANSACTION;
DROP DATABASE TennisBooking;
CREATE DATABASE IF NOT EXISTS TennisBooking;
USE TennisBooking;

CREATE TABLE IF NOT EXISTS `SocialHub` (
	`Id` INTEGER NOT NULL AUTO_INCREMENT,
	`Facebook` TEXT NOT NULL,
	`Instagram` TEXT NOT NULL,
	`Twitter` TEXT NOT NULL,
	`Youtube` TEXT NOT NULL,
	`LinkedIn` TEXT NOT NULL,
	`Telephone` TEXT NOT NULL,
	`Email` TEXT NOT NULL,
	`Website` TEXT NOT NULL,
	PRIMARY KEY (`Id`)
);
CREATE TABLE IF NOT EXISTS `User` (
	`Id` INTEGER NOT NULL AUTO_INCREMENT,
	`UUID` TEXT NOT NULL,
	`Email` TEXT NOT NULL,
	`Password` TEXT NOT NULL,
	`VerificationCode` TEXT NOT NULL,
	`Verified` INTEGER NOT NULL,
	`ResetCode` TEXT NOT NULL,
	`ResetCodeExpires` TEXT,
	`FirstName` TEXT NOT NULL,
	`LastName` TEXT NOT NULL,
	`Gender` INTEGER NOT NULL,
	`BirthDate` TEXT,
	`RegistrationDate` TEXT NOT NULL,
	`Welcomed` INTEGER NOT NULL,
	PRIMARY KEY (`Id`)
);
CREATE TABLE IF NOT EXISTS `Club` (
	`Id` INTEGER NOT NULL AUTO_INCREMENT,
	`Link` TEXT NOT NULL,
	`AdminId` INTEGER,
	`IBAN` TEXT NOT NULL,
	`PaidTill` TEXT,
	`FreeTrialTill` TEXT NOT NULL,
	`Name` TEXT NOT NULL,
	`Info` TEXT NOT NULL,
	`Address` TEXT NOT NULL,
	`ZipCode` TEXT NOT NULL,
	`ImagePath` TEXT NOT NULL,
	`SocialHubId` INTEGER NOT NULL,
	FOREIGN KEY (`AdminId`) REFERENCES `User` (`Id`),
	FOREIGN KEY (`SocialHubId`) REFERENCES `SocialHub` (`Id`) ON DELETE CASCADE,
	PRIMARY KEY (`Id`)
);
CREATE TABLE IF NOT EXISTS `PhoneNumber` (
	`UserId` INTEGER NOT NULL,
	`Prefix` TEXT NOT NULL,
	`Number` TEXT NOT NULL,
	FOREIGN KEY (`UserId`) REFERENCES `User` (`Id`) ON DELETE CASCADE,
	PRIMARY KEY (`UserId`)
);
CREATE TABLE IF NOT EXISTS `ClubEvent` (
	`Id` INTEGER NOT NULL AUTO_INCREMENT,
	`Name` TEXT NOT NULL,
	`Time` TEXT NOT NULL,
	`Info` TEXT NOT NULL,
	`ClubNavigationId` INTEGER NOT NULL,
	FOREIGN KEY (`ClubNavigationId`) REFERENCES `Club` (`Id`) ON DELETE CASCADE,
	PRIMARY KEY (`Id`)
);
CREATE TABLE IF NOT EXISTS `ClubNews` (
	`Id` INTEGER NOT NULL AUTO_INCREMENT,
	`Title` TEXT NOT NULL,
	`Info` TEXT NOT NULL,
	`Written` TEXT NOT NULL,
	`ClubNavigationId` INTEGER NOT NULL,
	FOREIGN KEY (`ClubNavigationId`) REFERENCES `Club` (`Id`) ON DELETE CASCADE,
	PRIMARY KEY (`Id`)
);
COMMIT;